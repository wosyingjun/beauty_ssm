<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 缓存的层级 -->
	<context:component-scan base-package="com.yingjun.ssm.cache" />
	<!-- 引入redis配置 -->
	<context:property-placeholder location="classpath:redis.properties"
		ignore-unresolvable="true" />

	<!-- Redis 配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<!-- JedisCluster 集群高可用配置 -->
	<!--<bean id="jedisCluster" class="redis.clients.jedis.JedisCluster"> <constructor-arg 
		index="0"> <set> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg 
		index="0" value="${redis.ip1}" /> <constructor-arg index="1" value="${redis.port1}" 
		type="int" /> </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg 
		index="0" value="${redis.ip2}" /> <constructor-arg index="1" value="${redis.port2}" 
		type="int" /> </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg 
		index="0" value="${redis.ip3}" /> <constructor-arg index="1" value="${redis.port3}" 
		type="int" /> </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg 
		index="0" value="${redis.ip4}" /> <constructor-arg index="1" value="${redis.port4}" 
		type="int" /> </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg 
		index="0" value="${redis.ip5}" /> <constructor-arg index="1" value="${redis.port5}" 
		type="int" /> </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg 
		index="0" value="${redis.ip6}" /> <constructor-arg index="1" value="${redis.port6}" 
		type="int" /> </bean> </set> </constructor-arg> <constructor-arg index="1" 
		value="2000" type="int"></constructor-arg> <constructor-arg index="2" value="100" 
		type="int"></constructor-arg> <constructor-arg index="3" ref="jedisPoolConfig"></constructor-arg> 
		</bean> -->

	<!--redis Sentinel主从高可用方案配置 -->
	<!-- <bean id="sentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration"> 
		<property name="master"> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<property name="name" value="master-1"></property> </bean> </property> <property 
		name="sentinels"> <set> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="${sentinel1.ip}"></constructor-arg> <constructor-arg 
		name="port" value="${sentinel1.port}"></constructor-arg> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="${sentinel2.ip}"></constructor-arg> <constructor-arg 
		name="port" value="${sentinel2.port}"></constructor-arg> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="${sentinel3.ip}"></constructor-arg> <constructor-arg 
		name="port" value="${sentinel3.port}"></constructor-arg> </bean> </set> </property> 
		</bean> <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
		p:use-pool="true"> <property name="password" value="${redis.pass}" /> <property 
		name="poolConfig"> <ref bean="jedisPoolConfig" /> </property> <constructor-arg 
		name="sentinelConfig" ref="sentinelConfiguration" /> </bean> -->

	<!-- redis单节点数据库连接配置 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.pass}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>


</beans>
